{"ast":null,"code":"var _jsxFileName = \"/Users/olivia/Desktop/study/front-end/React/third_react/redux-counter/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from \"../store/index\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter.counter); // fn을 주면, react-redux가 redux의 state를 보낸다. fn가 어떤 데이터를 store에서 추출할지 결정. =>  redux가 관리하는 가장 최신의 counter를 받을 수 있다.\n\n  const show = useSelector(state => state.counter.showCounter);\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); //index의 속성과 정확하게 같은 이름이여야한다. store에서 action.value에서 value대신 amount나 다른 속성이름으로 설정한다면, value가 아닌 amount나 설정한 이름으로 저장해야한다. 그렇지않으면 NaN이 뜸.\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"+5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useSelector","useDispatch","counterActions","classes","Counter","dispatch","counter","state","show","showCounter","incrementHandler","increment","decrementHandler","decrement","increaseHandler","increase","toggleCounterHandler","toggleCounter","value"],"sources":["/Users/olivia/Desktop/study/front-end/React/third_react/redux-counter/src/components/Counter.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\n\nimport { counterActions } from \"../store/index\";\n\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter.counter); // fn을 주면, react-redux가 redux의 state를 보낸다. fn가 어떤 데이터를 store에서 추출할지 결정. =>  redux가 관리하는 가장 최신의 counter를 받을 수 있다.\n\n  const show = useSelector((state) => state.counter.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); //index의 속성과 정확하게 같은 이름이여야한다. store에서 action.value에서 value대신 amount나 다른 속성이름으로 설정한다면, value가 아닌 amount나 설정한 이름으로 저장해야한다. 그렇지않으면 NaN이 뜸.\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter);\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>+</button>\n        <button onClick={increaseHandler}>+5</button>\n        <button onClick={decrementHandler}>-</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,cAAc,QAAQ,gBAAgB;AAE/C,OAAOC,OAAO,MAAM,sBAAsB;AAAC;AAE3C,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,OAAO,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACD,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC;;EAE/D,MAAME,IAAI,GAAGR,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACD,OAAO,CAACG,WAAW,CAAC;EAE9D,MAAMC,gBAAgB,GAAG,MAAM;IAC7BL,QAAQ,CAACH,cAAc,CAACS,SAAS,EAAE,CAAC;EACtC,CAAC;EACD,MAAMC,gBAAgB,GAAG,MAAM;IAC7BP,QAAQ,CAACH,cAAc,CAACW,SAAS,EAAE,CAAC;EACtC,CAAC;EACD,MAAMC,eAAe,GAAG,MAAM;IAC5BT,QAAQ,CAACH,cAAc,CAACa,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;;EAED,MAAMC,oBAAoB,GAAG,MAAM;IACjCX,QAAQ,CAACH,cAAc,CAACe,aAAa,CAAC;EACxC,CAAC;EAED,oBACE;IAAM,SAAS,EAAEd,OAAO,CAACG,OAAQ;IAAA,wBAC/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrBE,IAAI,iBAAI;MAAK,SAAS,EAAEL,OAAO,CAACe,KAAM;MAAA,UAAEZ;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO,eACvD;MAAA,wBACE;QAAQ,OAAO,EAAEI,gBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eAC7C;QAAQ,OAAO,EAAEI,eAAgB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY,eAC7C;QAAQ,OAAO,EAAEF,gBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC,eACN;MAAQ,OAAO,EAAEI,oBAAqB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB;EAAA;IAAA;IAAA;IAAA;EAAA,QACzD;AAEX,CAAC;AAAC,GAhCIZ,OAAO;EAAA,QACMH,WAAW,EACZD,WAAW,EAEdA,WAAW;AAAA;AAAA,KAJpBI,OAAO;AAkCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}